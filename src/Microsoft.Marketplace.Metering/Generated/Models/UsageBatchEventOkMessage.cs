// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Microsoft.Marketplace.Metering.Models
{
    /// <summary> The UsageBatchEventOkMessage. </summary>
    public partial class UsageBatchEventOkMessage
    {
        /// <summary> Initializes a new instance of UsageBatchEventOkMessage. </summary>
        internal UsageBatchEventOkMessage()
        {
        }

        /// <summary> Initializes a new instance of UsageBatchEventOkMessage. </summary>
        /// <param name="usageEventId"> Unique identifier associated with the usage event. </param>
        /// <param name="status"> Status of the operation. </param>
        /// <param name="messageTime"> Time this message was created in UTC. </param>
        /// <param name="resourceId"> Identifier of the resource against which usage is emitted. </param>
        /// <param name="resourceUri"> Identifier of the managed app resource against which usage is emitted. </param>
        /// <param name="quantity"> Number of units consumed. </param>
        /// <param name="dimension"> Dimension identifier. </param>
        /// <param name="effectiveStartTime"> Time in UTC when the usage event occurred. </param>
        /// <param name="planId"> Plan associated with the purchased offer. </param>
        /// <param name="error"> . </param>
        internal UsageBatchEventOkMessage(Guid? usageEventId, UsageEventStatusEnum? status, DateTimeOffset? messageTime, Guid? resourceId, string resourceUri, double? quantity, string dimension, DateTimeOffset? effectiveStartTime, string planId, UsageEventConflictResponse error)
        {
            UsageEventId = usageEventId;
            Status = status;
            MessageTime = messageTime;
            ResourceId = resourceId;
            ResourceUri = resourceUri;
            Quantity = quantity;
            Dimension = dimension;
            EffectiveStartTime = effectiveStartTime;
            PlanId = planId;
            Error = error;
        }

        /// <summary> Unique identifier associated with the usage event. </summary>
        public Guid? UsageEventId { get; }
        /// <summary> Status of the operation. </summary>
        public UsageEventStatusEnum? Status { get; }
        /// <summary> Time this message was created in UTC. </summary>
        public DateTimeOffset? MessageTime { get; }
        /// <summary> Identifier of the resource against which usage is emitted. </summary>
        public Guid? ResourceId { get; }
        /// <summary> Identifier of the managed app resource against which usage is emitted. </summary>
        public string ResourceUri { get; }
        /// <summary> Number of units consumed. </summary>
        public double? Quantity { get; }
        /// <summary> Dimension identifier. </summary>
        public string Dimension { get; }
        /// <summary> Time in UTC when the usage event occurred. </summary>
        public DateTimeOffset? EffectiveStartTime { get; }
        /// <summary> Plan associated with the purchased offer. </summary>
        public string PlanId { get; }
        public UsageEventConflictResponse Error { get; }
    }
}
